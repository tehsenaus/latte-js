
var should = require("should");
var Q = require("q");

describe('Generators', function () {

	it('can yield values', function () {
		function *g() {
			yield 42;
		}
		g().next().should.equal(42);
	})

	it('can accept values on yield', function () {
		function *g() {
			(yield 42).should.equal("hello");
			yield "bye";
		}
		var i = g();
		i.next().should.equal(42);
		i.send("hello").should.equal("bye");
	})

	it('works with conditionals', function () {
		function *g() {
			var x = true ? yield 'Meee' : 'You';
			x.should.equal('Meee');
			yield "bye";
		}
		var i = g();
		var v = i.next();
		v.should.equal('Meee');
		i.send(v).should.equal("bye");
	})

	it('doesn\'t evaluate false conditional', function () {
		var yielded = false;
		function *g() {
			var x = false ? yield 'Meee' : 'You';
			x.should.equal('You');
			yielded.should.equal(false);
			yield "bye";
		}
		var i = g();
		var v = i.next();
		yielded = true;
	})


	it('works with logical expression', function () {
		function *g()  {
			var x = true && (yield 'Meee');
			x.should.equal('Meee');
			yield "bye";
		}
		var i = g();
		var v = i.next();
		v.should.equal('Meee');
		i.send(v).should.equal("bye");
	})

	it('supports short circuit evaluation', function () {
		var yielded = false;
		function *g()  {
			var x = 'You' || (yield 'Meee');
			x.should.equal('You');
			yielded.should.equal(false);
			yield "bye";
		}
		var i = g();
		var v = i.next();
		yielded = true;
		v.should.equal('bye');
	})



	it('works with if statement', function () {
		function *g()  {
			var x;
			if ( true ) {
				x = yield 'Meee';
			} else {
				x = 'You';
			}

			x.should.equal('Meee');
			yield "bye";
		}

		var i = g();
		var v = i.next();
		v.should.equal('Meee');
		i.send(v).should.equal("bye");
	})



	// it('works with for-in statement', function (done) {
	// 	do {
	// 		var x = "";
			
	// 		for ( var i in {a:1, b:1} ) {
	// 			x += << async(i);
	// 		}

	// 		x.should.equal('ab');
	// 		done();
	// 	}
	// })


	// it('works with for-of statement', function (done) {
	// 	do {
	// 		var r = "";
	// 		for (var x of ['a','b','c']) {
	// 			r += << async(x);
	// 		}

	// 		r.should.equal('abc');
	// 		done();
	// 	}
	// })
	
})
